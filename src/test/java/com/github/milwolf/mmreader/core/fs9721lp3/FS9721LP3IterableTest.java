package com.github.milwolf.mmreader.core.fs9721lp3;

import org.junit.After;
import org.junit.Before;
import org.junit.Test;

import java.io.ByteArrayInputStream;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotNull;

public class FS9721LP3IterableTest {

    static byte[] dataTest = new byte[]{
            (byte) 0x17, (byte) 0x27, (byte) 0x3D, (byte) 0x42, (byte) 0x57, (byte) 0x6F, (byte) 0x7D, (byte) 0x87, (byte) 0x9D, (byte) 0xA0, (byte) 0xB0, (byte) 0xC0, (byte) 0xD4, (byte) 0xE8,
            (byte) 0x17, (byte) 0x27, (byte) 0x3D, (byte) 0x42, (byte) 0x57, (byte) 0x6F, (byte) 0x7D, (byte) 0x87, (byte) 0x9D, (byte) 0xA0, (byte) 0xB0, (byte) 0xC0, (byte) 0xD4, (byte) 0xE8,
            (byte) 0x17, (byte) 0x27, (byte) 0x3D, (byte) 0x42, (byte) 0x57, (byte) 0x6F, (byte) 0x7D, (byte) 0x87, (byte) 0x9D, (byte) 0xA0, (byte) 0xB0, (byte) 0xC0, (byte) 0xD4, (byte) 0xE8,
            (byte) 0x17, (byte) 0x27, (byte) 0x3D, (byte) 0x42, (byte) 0x57, (byte) 0x6F, (byte) 0x7D, (byte) 0x87, (byte) 0x9D, (byte) 0xA0, (byte) 0xB0, (byte) 0xC0, (byte) 0xD4, (byte) 0xE8,
            (byte) 0x17, (byte) 0x27, (byte) 0x3D, (byte) 0x42, (byte) 0x57, (byte) 0x6F, (byte) 0x7D, (byte) 0x87, (byte) 0x9D, (byte) 0xA0, (byte) 0xB0, (byte) 0xC0, (byte) 0xD4, (byte) 0xE8,
            (byte) 0x17, (byte) 0x27, (byte) 0x3D, (byte) 0x42, (byte) 0x57, (byte) 0x6F, (byte) 0x7D, (byte) 0x87, (byte) 0x9D, (byte) 0xA0, (byte) 0xB0, (byte) 0xC0, (byte) 0xD4, (byte) 0xE8,
            (byte) 0x17, (byte) 0x27, (byte) 0x3D, (byte) 0x42, (byte) 0x57, (byte) 0x6F, (byte) 0x7D, (byte) 0x87, (byte) 0x9D, (byte) 0xA0, (byte) 0xB0, (byte) 0xC0, (byte) 0xD4, (byte) 0xE8,
            (byte) 0x17, (byte) 0x27, (byte) 0x3D, (byte) 0x41, (byte) 0x5F, (byte) 0x6B, (byte) 0x7F, (byte) 0x83, (byte) 0x9F, (byte) 0xA0, (byte) 0xB0, (byte) 0xC0, (byte) 0xD4, (byte) 0xE8,
            (byte) 0x17, (byte) 0x27, (byte) 0x3D, (byte) 0x41, (byte) 0x5F, (byte) 0x6B, (byte) 0x7F, (byte) 0x87, (byte) 0x9F, (byte) 0xA0, (byte) 0xB0, (byte) 0xC0, (byte) 0xD4, (byte) 0xE8,
            (byte) 0x17, (byte) 0x27, (byte) 0x3D, (byte) 0x41, (byte) 0x5F, (byte) 0x6B, (byte) 0x7F, (byte) 0x81, (byte) 0x95, (byte) 0xA0, (byte) 0xB0, (byte) 0xC0, (byte) 0xD4, (byte) 0xE8,
            (byte) 0x17, (byte) 0x27, (byte) 0x3D, (byte) 0x41, (byte) 0x5F, (byte) 0x6B, (byte) 0x7F, (byte) 0x87, (byte) 0x9E, (byte) 0xA0, (byte) 0xB0, (byte) 0xC0, (byte) 0xD4, (byte) 0xE8,
            (byte) 0x17, (byte) 0x27, (byte) 0x3D, (byte) 0x41, (byte) 0x5F, (byte) 0x6B, (byte) 0x7F, (byte) 0x87, (byte) 0x9E, (byte) 0xA0, (byte) 0xB0, (byte) 0xC0, (byte) 0xD4, (byte) 0xE8,
            (byte) 0x17, (byte) 0x27, (byte) 0x3D, (byte) 0x41, (byte) 0x5F, (byte) 0x6B, (byte) 0x7F, (byte) 0x83, (byte) 0x9E, (byte) 0xA0, (byte) 0xB0, (byte) 0xC0, (byte) 0xD4, (byte) 0xE8,
            (byte) 0x17, (byte) 0x27, (byte) 0x3D, (byte) 0x41, (byte) 0x5F, (byte) 0x6B, (byte) 0x7F, (byte) 0x83, (byte) 0x9E, (byte) 0xA0, (byte) 0xB0, (byte) 0xC0, (byte) 0xD4, (byte) 0xE8,
            (byte) 0x17, (byte) 0x27, (byte) 0x3D, (byte) 0x41, (byte) 0x5F, (byte) 0x6B, (byte) 0x7F, (byte) 0x87, (byte) 0x9E, (byte) 0xA0, (byte) 0xB0, (byte) 0xC0, (byte) 0xD4, (byte) 0xE8,
            (byte) 0x17, (byte) 0x27, (byte) 0x3D, (byte) 0x41, (byte) 0x5F, (byte) 0x6B, (byte) 0x7F, (byte) 0x81, (byte) 0x95, (byte) 0xA0, (byte) 0xB0, (byte) 0xC0, (byte) 0xD4, (byte) 0xE8,
            (byte) 0x17, (byte) 0x27, (byte) 0x3D, (byte) 0x41, (byte) 0x5F, (byte) 0x6B, (byte) 0x7F, (byte) 0x87, (byte) 0x9F, (byte) 0xA0, (byte) 0xB0, (byte) 0xC0, (byte) 0xD4, (byte) 0xE8,
            (byte) 0x17, (byte) 0x27, (byte) 0x3D, (byte) 0x41, (byte) 0x5F, (byte) 0x6B, (byte) 0x7F, (byte) 0x87, (byte) 0x9F, (byte) 0xA0, (byte) 0xB0, (byte) 0xC0, (byte) 0xD4, (byte) 0xE8,
            (byte) 0x17, (byte) 0x27, (byte) 0x3D, (byte) 0x41, (byte) 0x5F, (byte) 0x6B, (byte) 0x7F, (byte) 0x87, (byte) 0x9F, (byte) 0xA0, (byte) 0xB0, (byte) 0xC0, (byte) 0xD4, (byte) 0xE8,
            (byte) 0x17, (byte) 0x27, (byte) 0x3D, (byte) 0x41, (byte) 0x5F, (byte) 0x6B, (byte) 0x7F, (byte) 0x87, (byte) 0x9F, (byte) 0xA0, (byte) 0xB0, (byte) 0xC0, (byte) 0xD4, (byte) 0xE8,
            (byte) 0x17, (byte) 0x27, (byte) 0x3D, (byte) 0x41, (byte) 0x5F, (byte) 0x6B, (byte) 0x7F, (byte) 0x87, (byte) 0x9F, (byte) 0xA0, (byte) 0xB0, (byte) 0xC0, (byte) 0xD4, (byte) 0xE8,
            (byte) 0x17, (byte) 0x27, (byte) 0x3D, (byte) 0x41, (byte) 0x5F, (byte) 0x6B, (byte) 0x7F, (byte) 0x87, (byte) 0x9F, (byte) 0xA0, (byte) 0xB0, (byte) 0xC0, (byte) 0xD4, (byte) 0xE8,
            (byte) 0x17, (byte) 0x27, (byte) 0x3D, (byte) 0x41, (byte) 0x5F, (byte) 0x6B, (byte) 0x7F, (byte) 0x87, (byte) 0x9F, (byte) 0xA0, (byte) 0xB0, (byte) 0xC0, (byte) 0xD4, (byte) 0xE8,
            (byte) 0x17, (byte) 0x27, (byte) 0x3D, (byte) 0x41, (byte) 0x5F, (byte) 0x6B, (byte) 0x7F, (byte) 0x87, (byte) 0x9F, (byte) 0xA0, (byte) 0xB0, (byte) 0xC0, (byte) 0xD4, (byte) 0xE8,
            (byte) 0x17, (byte) 0x27, (byte) 0x3D, (byte) 0x41, (byte) 0x5F, (byte) 0x6B, (byte) 0x7F, (byte) 0x87, (byte) 0x9F, (byte) 0xA0, (byte) 0xB0, (byte) 0xC0, (byte) 0xD4, (byte) 0xE8,
            (byte) 0x17, (byte) 0x27, (byte) 0x3D, (byte) 0x41, (byte) 0x5F, (byte) 0x6B, (byte) 0x7F, (byte) 0x87, (byte) 0x9F, (byte) 0xA0, (byte) 0xB0, (byte) 0xC0, (byte) 0xD4, (byte) 0xE8,
            (byte) 0x17, (byte) 0x27, (byte) 0x3D, (byte) 0x41, (byte) 0x5F, (byte) 0x6B, (byte) 0x7F, (byte) 0x87, (byte) 0x9F, (byte) 0xA0, (byte) 0xB0, (byte) 0xC0, (byte) 0xD4, (byte) 0xE8,
            (byte) 0x17, (byte) 0x27, (byte) 0x3D, (byte) 0x41, (byte) 0x5F, (byte) 0x6B, (byte) 0x7F, (byte) 0x87, (byte) 0x9F, (byte) 0xA0, (byte) 0xB0, (byte) 0xC0, (byte) 0xD4, (byte) 0xE8,
            (byte) 0x17, (byte) 0x27, (byte) 0x3D, (byte) 0x41, (byte) 0x5F, (byte) 0x6B, (byte) 0x7F, (byte) 0x87, (byte) 0x9F, (byte) 0xA0, (byte) 0xB0, (byte) 0xC0, (byte) 0xD4, (byte) 0xE8,
            (byte) 0x17, (byte) 0x27, (byte) 0x3D, (byte) 0x41, (byte) 0x5F, (byte) 0x6B, (byte) 0x7F, (byte) 0x87, (byte) 0x9F, (byte) 0xA0, (byte) 0xB0, (byte) 0xC0, (byte) 0xD4, (byte) 0xE8,
            (byte) 0x17, (byte) 0x27, (byte) 0x3D, (byte) 0x41, (byte) 0x5F, (byte) 0x6B, (byte) 0x7F, (byte) 0x87, (byte) 0x9F, (byte) 0xA0, (byte) 0xB0, (byte) 0xC0, (byte) 0xD4, (byte) 0xE8,
            (byte) 0x17, (byte) 0x27, (byte) 0x3D, (byte) 0x41, (byte) 0x5F, (byte) 0x6B, (byte) 0x7F, (byte) 0x87, (byte) 0x9F, (byte) 0xA0, (byte) 0xB0, (byte) 0xC0, (byte) 0xD4, (byte) 0xE8,
            (byte) 0x17, (byte) 0x27, (byte) 0x3D, (byte) 0x41, (byte) 0x5F, (byte) 0x6B, (byte) 0x7F, (byte) 0x87, (byte) 0x9F, (byte) 0xA0, (byte) 0xB0, (byte) 0xC0, (byte) 0xD4, (byte) 0xE8,
            (byte) 0x17, (byte) 0x27, (byte) 0x3D, (byte) 0x41, (byte) 0x5F, (byte) 0x6B, (byte) 0x7F, (byte) 0x87, (byte) 0x9F, (byte) 0xA0, (byte) 0xB0, (byte) 0xC0, (byte) 0xD4, (byte) 0xE8};

    private FS9721LP3Iterable iterable;

    public static void main(String[] args) {
        org.junit.runner.JUnitCore.main("com.github.milwolf.mmreader.core.fs9721lp3.FS9721LP3IterableTest");
    }

    @Before
    public void init() throws Exception {

        ByteArrayInputStream byteInputStream = new ByteArrayInputStream(dataTest);

        iterable = new FS9721LP3Iterable(byteInputStream);
    }

    @After
    public void clean() throws Exception {
        iterable = null;
    }

    @Test
    public void iterable() {
        assertNotNull(iterable);
    }

    @Test
    public void iterate() throws Exception {

        IteratorWithException<Record> iterator = iterable.iterator();

        for (int i = 0; i < 34; i++) {

            Record record = iterator.next();

            if (record != null) {
                assertEquals(Record.Unit.VOLT, record.getUnit());
            }
        }
    }
}
